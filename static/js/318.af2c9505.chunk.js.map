{"version":3,"file":"static/js/318.af2c9505.chunk.js","mappings":"oVAqKA,UAhJoB,WAAO,IAAD,gBAClBA,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,KAAND,EACR,GAAwCE,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoDF,EAAAA,EAAAA,WAAS,GAA7D,eAAOG,EAAP,KAA2BC,EAA3B,KACA,GAAqCC,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMC,QAA7DC,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,MAYrBC,EAAU,yCAAG,mGACXlB,GAASmB,EAAAA,EAAAA,IAAkBL,IADhB,OAEjBd,GAASoB,EAAAA,EAAAA,OACTlB,EAAS,KAHQ,2CAAH,qDAMhB,GAIImB,EAAAA,EAAAA,IAA2B,CAAEC,KAAM,WAAYC,cAAe,CAAER,KAAMA,EAAMS,MAAOP,KAHrFQ,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAEf,OACE,SAAC,IAAD,CAAWE,SAAS,KAApB,UACE,UAAC,IAAD,CACEC,GAAI,CACFC,QAAS,OACTC,cAAe,UAHnB,WAME,SAAC,IAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKJ,GAAI,CAAEK,UAAW,UAAzD,SACG/B,EAAE,mBAEL,UAAC,IAAD,CAAK6B,UAAU,OAAOG,SAAUV,GAhCrB,SAACW,GAChBrC,GACEsC,EAAAA,EAAAA,IAAW,CACTrB,MAAOoB,EAAKb,MACZe,SAAUF,EAAKE,SACfxB,KAAMsB,EAAKtB,WA2B6CyB,YAAU,EAACV,GAAI,CAAEW,GAAI,GAA7E,WACE,SAAC,KAAD,QACEP,QAAQ,WACRQ,KAAK,QACLC,UAAQ,EACRC,QAAQ,OAACjB,QAAD,IAACA,GAAD,UAACA,EAAQZ,YAAT,QAAC,EAAc8B,SACvBC,WAAkB,OAANnB,QAAM,IAANA,GAAA,UAAAA,EAAQZ,YAAR,SAAc8B,QAAd,OAAwBlB,QAAxB,IAAwBA,GAAxB,UAAwBA,EAAQZ,YAAhC,aAAwB,EAAc8B,QAAU,IAC5DE,OAAO,SACPC,WAAS,EACTlC,GAAG,OACHmC,MAAO7C,EAAE,eACT8C,WAAS,GACLzB,EAAS,OAAQ,CACnBkB,SAAU,CAAEQ,OAAO,EAAMN,QAAQ,GAAD,OAAKzC,EAAE,sBACvCgD,UAAW,CACTD,MAAO,EACPN,QAAQ,GAAD,OAAKzC,EAAE,0BAIpB,SAAC,KAAD,QACE8B,QAAQ,WACRQ,KAAK,QACLC,UAAQ,EACRC,QAAQ,OAACjB,QAAD,IAACA,GAAD,UAACA,EAAQH,aAAT,QAAC,EAAeqB,SACxBC,WAAkB,OAANnB,QAAM,IAANA,GAAA,UAAAA,EAAQH,aAAR,SAAeqB,QAAf,OAAyBlB,QAAzB,IAAyBA,GAAzB,UAAyBA,EAAQH,aAAjC,aAAyB,EAAeqB,QAAU,IAC9DG,WAAS,EACTK,aAAa,WACbvC,GAAG,QACHmC,MAAO7C,EAAE,eACLqB,EAAS,QAAS,CACpBkB,SAAU,CAAEQ,OAAO,EAAMN,QAAQ,GAAD,OAAKzC,EAAE,sBACvCkD,QAAS,CACPH,MACE,wJACFN,QAAQ,GAAD,OAAKzC,EAAE,+BAIpB,SAAC,KAAD,QACE8B,QAAQ,WACRQ,KAAK,QACLC,UAAQ,EACRC,QAASjB,EAAOY,SAChBO,WAAY,UAAAnB,EAAOY,gBAAP,SAAiBM,QAAjB,UAA2BlB,EAAOY,gBAAlC,aAA2B,EAAiBM,QAAU,IAClEG,WAAS,EACTC,MAAO7C,EAAE,iBACTmD,KAAMhD,EAAe,OAAS,WAC9BO,GAAG,WACHuC,aAAa,mBACbG,WAAY,CACVC,cACE,SAAC,IAAD,CAAgBC,SAAS,QAAzB,UACE,SAAC,IAAD,CAAYC,QAAS,kBAAMnD,GAAgB,SAACoD,GAAD,OAAgBA,MAAYC,KAAK,MAA5E,SACGtD,GAAe,SAAC,IAAD,KAAoB,SAAC,IAAD,UAKxCkB,EAAS,WAAY,CACvBkB,SAAU,CAAEQ,OAAO,EAAMN,QAAQ,GAAD,OAAKzC,EAAE,sBACvCgD,UAAW,CACTD,MAAO,EACPN,QAAQ,GAAD,OAAKzC,EAAE,8BAIpB,SAAC,IAAD,CACEmD,KAAK,SACLP,WAAS,EACTd,QAAQ,YACR4B,MAAM,UACNC,SAAS,SAAC,IAAD,IACTC,QAAShD,EACTiD,gBAAgB,MAChBnC,GAAI,CACFW,GAAI,EACJyB,GAAI,EACJ,SAAU,CACRJ,MAAO,UAZb,SAgBG1D,EAAE,iBAEL,SAAC,IAAD,CACE8B,QAAQ,YACR4B,MAAM,QACNd,WAAS,EACTW,QAAS,kBAAMjD,GAAsB,IAJvC,SAMGN,EAAE,oBAEL,SAAC,IAAD,CACE+D,OAAQ1D,EACR2D,MAAO,kBAAM1D,GAAsB,IACnC2D,KAAMnD","sources":["components/pages/EditProfile.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport {\n  Box,\n  Button,\n  Container,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport { useAppDispatch, useAppSelector } from '../../hooks/redux.hooks';\nimport ConformModal from '../ConformModal';\nimport { propsSubmitSignUp } from '../Login/SignUp';\nimport { deleteCurrentUser, logOut, updateUser } from '../../store/slices/authReduser';\n\nconst EditProfile = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isOpenConformModal, setIsOpenConformModal] = useState(false);\n  const { id, name, pending, login } = useAppSelector((state) => state.auth);\n\n  const onSubmit = (data: propsSubmitSignUp) => {\n    dispatch(\n      updateUser({\n        login: data.email,\n        password: data.password,\n        name: data.name,\n      })\n    );\n  };\n\n  const deleteUser = async () => {\n    await dispatch(deleteCurrentUser(id));\n    dispatch(logOut());\n    navigate('/');\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<propsSubmitSignUp>({ mode: 'onSubmit', defaultValues: { name: name, email: login } });\n  return (\n    <Container maxWidth=\"xs\">\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Typography component=\"h2\" variant=\"h5\" sx={{ fontStyle: 'italic' }}>\n          {t('EDIT_PROFILE')}\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate sx={{ mt: 1 }}>\n          <TextField\n            variant=\"standard\"\n            size=\"small\"\n            required\n            error={!!errors?.name?.message}\n            helperText={errors?.name?.message ? errors?.name?.message : ' '}\n            margin=\"normal\"\n            fullWidth\n            id=\"name\"\n            label={t('SIGNUP.NAME')}\n            autoFocus\n            {...register('name', {\n              required: { value: true, message: `${t('FORM.REQUIRE_MSG')}` },\n              minLength: {\n                value: 3,\n                message: `${t('FORM.NAME_LIMIT')}`,\n              },\n            })}\n          />\n          <TextField\n            variant=\"standard\"\n            size=\"small\"\n            required\n            error={!!errors?.email?.message}\n            helperText={errors?.email?.message ? errors?.email?.message : ' '}\n            fullWidth\n            autoComplete=\"username\"\n            id=\"email\"\n            label={t('FORM.EMAIL')}\n            {...register('email', {\n              required: { value: true, message: `${t('FORM.REQUIRE_MSG')}` },\n              pattern: {\n                value:\n                  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: `${t('FORM.INCORRECT_EMAIL')}`,\n              },\n            })}\n          />\n          <TextField\n            variant=\"standard\"\n            size=\"small\"\n            required\n            error={!!errors.password}\n            helperText={errors.password?.message ? errors.password?.message : ' '}\n            fullWidth\n            label={t('FORM.PASSWORD')}\n            type={showPassword ? 'text' : 'password'}\n            id=\"password\"\n            autoComplete=\"current-password\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"start\">\n                  <IconButton onClick={() => setShowPassword((prevState) => !prevState)} edge=\"end\">\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            {...register('password', {\n              required: { value: true, message: `${t('FORM.REQUIRE_MSG')}` },\n              minLength: {\n                value: 6,\n                message: `${t('FORM.PASSWORD_LIMIT')}`,\n              },\n            })}\n          />\n          <LoadingButton\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"success\"\n            endIcon={<SendIcon />}\n            loading={pending}\n            loadingPosition=\"end\"\n            sx={{\n              mt: 3,\n              mb: 2,\n              ':hover': {\n                color: 'white',\n              },\n            }}\n          >\n            {t('UPDATE_BTN')}\n          </LoadingButton>\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            fullWidth\n            onClick={() => setIsOpenConformModal(true)}\n          >\n            {t('SIGNUP.DELETE')}\n          </Button>\n          <ConformModal\n            isOpen={isOpenConformModal}\n            close={() => setIsOpenConformModal(false)}\n            func={deleteUser}\n          />\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default EditProfile;\n"],"names":["dispatch","useAppDispatch","navigate","useNavigate","t","useTranslation","useState","showPassword","setShowPassword","isOpenConformModal","setIsOpenConformModal","useAppSelector","state","auth","id","name","pending","login","deleteUser","deleteCurrentUser","logOut","useForm","mode","defaultValues","email","register","handleSubmit","errors","formState","maxWidth","sx","display","flexDirection","component","variant","fontStyle","onSubmit","data","updateUser","password","noValidate","mt","size","required","error","message","helperText","margin","fullWidth","label","autoFocus","value","minLength","autoComplete","pattern","type","InputProps","endAdornment","position","onClick","prevState","edge","color","endIcon","loading","loadingPosition","mb","isOpen","close","func"],"sourceRoot":""}